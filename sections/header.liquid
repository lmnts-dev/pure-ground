<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">

<noscript>{{ 'component-menu-drawer.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-notification.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-items.css' | asset_url | stylesheet_tag }}</noscript>

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

{% assign className = "site-header" %}

{% comment %} Output navigation twice, one to display on scroll up and one that always exists at the top of the page content {% endcomment %}
{% for i in (1..2) %}
  {% assign style = "on-scroll" %}
  {% if forloop.index0 == 1 %}
    {% assign style = "relative" %}
  {% endif %}

  <{% if style == "on-scroll" %}sticky-header{% else %}header{% endif %} class="{{ className }} __style-{{ style }} {% if section.settings.always_show_nav %}__always-show-nav{% endif %}">

    {% comment %} Logo {% endcomment %}
    <a class="{{ className }}__logo" href="/">{% render 'svg-logo' %}</a>

    {% comment %} Mobile hamburger button and divider {% endcomment %}
    <hamburger-button class="{{ className }}__hamburger"><span></span></hamburger-button>
    <div class="{{ className }}__mobile-divider">{% render 'svg-divider' %}</div>


    {% comment %} All the links {% endcomment %}
    <div class="{{ className }}__main-links">

      {% for block in section.blocks %}
        {% case block.type %}

          {% comment %} Regular link (no nested links) {% endcomment %}
          {% when 'link' %}
            {% if block.settings.label and block.settings.link %}
              <a class="{{ className }}__plain-link p-sm" href="{{ block.settings.link }}" class="p-sm">{{ block.settings.label }}</a>
            {% endif %}

          {% comment %} Link with nested links (dropdown) {% endcomment %}
          {% when 'label' %}
            {% if block.settings.label %}
              {% assign labelIndex = forloop.index0 %}

                <dropdown-button class="{{ className }}__label p-sm">{{ block.settings.label }}</dropdown-button>
                <div class="{{ className }}__dropdown">
                  <div class="{{ className }}__dropdown__divider">{% render 'svg-divider' color: block.settings.color %}{% render 'svg-divider' color: block.settings.color %}</div>
                  {% for block in section.blocks %}
                    {% assign blockClassName = className | append: "__dropdown__block" %}

                    {% if forloop.index0 > labelIndex %}
                      {% case block.type %}
                        {% when 'link' %}
                          {% break %}
                        {% when 'label' %}
                          {% break %}
                        {% when 'submenu' %}
                          {% render 'nav-dropdown-submenu' menu: block.settings.menu, className: blockClassName %}
                        {% when 'text' %}
                          {% render 'nav-dropdown-text-block' heading: block.settings.heading, text: block.settings.text, button_label: block.settings.button_label, button_link: block.settings.button_link, className: blockClassName %}
                        {% when 'page' %}
                          {% render 'nav-dropdown-page' page: block.settings.page, image: block.settings.image, className: blockClassName %}
                        {% when 'articles' %}
                          {% render 'nav-dropdown-articles' menu: block.settings.menu, className: blockClassName %}

                      {% endcase %}
                    {% endif %}
                  {% endfor %}
                </div>
              {% endif %}
            

            {% comment %} CTA {% endcomment %}
            {% when 'cta' %}
              {% assign ctaClassName = className | append: "__cta" %}
              <div class="{{ ctaClassName }}">
                {% render 'button', class: ctaClassName, button_label: block.settings.button_label, button_link: block.settings.button_link %}
              </div>


        {% endcase %}
      {% endfor %}
      
      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        {%- liquid
          if cart == empty
            render 'icon-cart-empty'
          else
            render 'icon-cart'
          endif
        -%}
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>

    

    {% comment %} All the icons/tools 
    <div class="{{ className }}__icons">

    </div>
    {% endcomment %}

  </{% if style == "on-scroll" %}sticky-header{% else %}header{% endif %}>
{% endfor %}

{%- render 'cart-notification', color_scheme: section.settings.color_scheme -%}

{% javascript %}

  class HamburgerButton extends HTMLElement {
    constructor() {
      super();

      this.setupListener();
    }

    //Add a on click listener to every hamburger button
    setupListener() {
      this.addEventListener('click', this.updateOverlayNav.bind(this));
    }

    //toggle overlay nav
    updateOverlayNav(){
      //parent element for this section
      var thisSection = this.parentNode;

      this.classList.toggle("__active");
      document.body.classList.toggle('__mobile-overflow-none');

      if ( this.classList.contains('__active') ){
        thisSection.classList.add("__overlay-open");
      }
      else {
        thisSection.classList.remove("__overlay-open");
      }
    }
  }

  customElements.define('hamburger-button', HamburgerButton);

  class DropdownButton extends HTMLElement {
    constructor() {
      super();

      this.setupListener();
    }

    //Add a on click listener to every dropdown button
    setupListener() {
      this.addEventListener('click', this.updateActiveDropdown.bind(this));
    }

    //on dropdown button click, updates what is active
    updateActiveDropdown() {

      //parent element for this section
      var thisSection = this.parentNode.parentNode;
      //all dropdowns in this section
      var dropdowns = thisSection.querySelectorAll('.site-header__label');

      //remove active class on nav buttons
      for (var i = 0; i < dropdowns.length; i++ ) {
        if (dropdowns[i] != this ) {
          dropdowns[i].classList.remove('__active');
        }
      }

      //add active class on clicked item
      this.classList.toggle('__active');

      if ( this.classList.contains('__active') ){
        thisSection.classList.add("__dropdown-open");
      }
      else {
        thisSection.classList.remove("__dropdown-open");
      }
    }
  }

  customElements.define('dropdown-button', DropdownButton);

  class StickyHeader extends HTMLElement {
    constructor() {
      super();

       document.addEventListener('scroll', this.updateClass.bind(this), false);
       document.lastScollPosition = 0;
    }

    updateClass(e) {
      //all dropdowns in header
      var dropdowns = document.querySelectorAll('.site-header__label');

      for (var i = 0; i < dropdowns.length; i++ ){
        dropdowns[i].classList.remove('__active');
      }
      
      let scrollPosition = window.pageYOffset;
      let lastScollPosition = e.currentTarget.lastScollPosition;
      let alwaysShowNav = this.classList.contains("__always-show-nav");
      let scrollingDown = false;
      if ( lastScollPosition < scrollPosition ) {
        scrollingDown = true;
      }

      if ( (!scrollingDown && scrollPosition > 200) || (scrollingDown && scrollPosition > 75)) {
        this.classList.add('__visible');
        this.parentNode.classList.add('__visible-nav');
      } else {
        this.classList.remove('__visible');
        this.parentNode.classList.remove('__visible-nav');
      }

      document.lastScollPosition = scrollPosition;
    }
  }

  customElements.define('sticky-header', StickyHeader);

{% endjavascript %}


{% comment %}



<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">
{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'component-loading-overlay.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<noscript>{{ 'component-list-menu.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-search.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-menu-drawer.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-notification.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-items.css' | asset_url | stylesheet_tag }}</noscript>

<style>
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  @media screen and (min-width: 990px) {
    header-drawer {
      display: none;
    }
  }

  .header__heading-link svg {
    height: 30px;
    width: auto;
  }

  .header__heading-link svg * {
    fill: var(--color-foreground);

  }

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }
</style>

<script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

<svg xmlns="http://www.w3.org/2000/svg" class="hidden">
  {% commen %}
    <symbol id="icon-search" viewbox="0 0 18 19" fill="none">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M11.03 11.68A5.784 5.784 0 112.85 3.5a5.784 5.784 0 018.18 8.18zm.26 1.12a6.78 6.78 0 11.72-.7l5.4 5.4a.5.5 0 11-.71.7l-5.41-5.4z" fill="currentColor"/>
    </symbol>
  {% endcommen %}

  <symbol id="icon-close" class="icon icon-close" fill="none" viewBox="0 0 18 17">
    <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
  </symbol>
</svg>
<{% if section.settings.enable_sticky_header %}sticky-header{% else %}div{% endif %} class="header-wrapper">
  <header class="header page-width{% if section.settings.menu != blank %} header--has-menu{% endif %}">
    {%- if section.settings.menu != blank -%}
      <header-drawer data-breakpoint="tablet">
        <details id="Details-menu-drawer-container" class="menu-drawer-container">
          <summary class="header__icon header__icon--menu header__icon--summary link focus-inset" aria-label="{{ 'sections.header.menu' | t }}">
            <span>
              {% render 'icon-hamburger' %}
              {% render 'icon-close' %}
            </span>
          </summary>
          <div id="menu-drawer" class="menu-drawer motion-reduce" tabindex="-1">
            <div class="menu-drawer__inner-container">
              <div class="menu-drawer__navigation-container">
                <nav class="menu-drawer__navigation">
                  <ul class="menu-drawer__menu list-menu" role="list">
                    {%- for link in section.settings.menu.links -%}
                      <li>
                        {%- if link.links != blank -%}
                          <details id="Details-menu-drawer-menu-item-{{ forloop.index }}">
                            <summary class="menu-drawer__menu-item list-menu__item link link--text focus-inset{% if link.child_active %} menu-drawer__menu-item--active{% endif %}">
                              {{ link.title | escape }}
                              {% render 'icon-arrow' %}
                              {% render 'icon-caret' %}
                            </summary>
                            <div id="link-{{ link.title | escape }}" class="menu-drawer__submenu motion-reduce" tabindex="-1">
                              <div class="menu-drawer__inner-submenu">
                                <button class="menu-drawer__close-button link link--text focus-inset" aria-expanded="true">
                                  {% render 'icon-arrow' %}
                                  {{ link.title | escape }}
                                </button>
                                <ul class="menu-drawer__menu list-menu" role="list" tabindex="-1">
                                  {%- for childlink in link.links -%}
                                    <li>
                                      {%- if childlink.links == blank -%}
                                        <a href="{{ childlink.url }}" class="menu-drawer__menu-item p-sm link--text list-menu__item focus-inset{% if childlink.current %} menu-drawer__menu-item--active{% endif %}"{% if childlink.current %} aria-current="page"{% endif %}>
                                          {{ childlink.title | escape }}
                                        </a>
                                      {%- else -%}
                                        <details id="Details-menu-drawer-submenu-{{ forloop.index }}">
                                          <summary class="menu-drawer__menu-item link link--text list-menu__item focus-inset">
                                            {{ childlink.title | escape }}
                                            {% render 'icon-arrow' %}
                                            {% render 'icon-caret' %}
                                          </summary>
                                          <div id="childlink-{{ childlink.title | escape }}" class="menu-drawer__submenu motion-reduce">
                                            <button class="menu-drawer__close-button link link--text focus-inset" aria-expanded="true">
                                              {% render 'icon-arrow' %}
                                              {{ childlink.title | escape }}
                                            </button>
                                            <ul class="menu-drawer__menu list-menu" role="list" tabindex="-1">
                                              {%- for grandchildlink in childlink.links -%}
                                                <li>
                                                  <a href="{{ grandchildlink.url }}" class="menu-drawer__menu-item p-sm link--text list-menu__item focus-inset{% if grandchildlink.current %} menu-drawer__menu-item--active{% endif %}"{% if grandchildlink.current %} aria-current="page"{% endif %}>
                                                    {{ grandchildlink.title | escape }}
                                                  </a>
                                                </li>
                                              {%- endfor -%}
                                            </ul>
                                          </div>
                                        </details>
                                      {%- endif -%}
                                    </li>
                                  {%- endfor -%}
                                </ul>
                              </div>
                            </div>
                          </details>
                        {%- else -%}
                          <a href="{{ link.url }}" class="menu-drawer__menu-item list-menu__item link link--text focus-inset {% if link.current %} menu-drawer__menu-item--active{% endif %}"{% if link.current %} aria-current="page"{% endif %}>
                            {{ link.title | escape }}
                          </a>
                        {%- endif -%}
                      </li>
                    {%- endfor -%}
                  </ul>
                </nav>
                <div class="menu-drawer__utility-links">
                  {%- if shop.customer_accounts_enabled -%}
                    <a href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}" class="menu-drawer__account link focus-inset h5">
                      {% render 'icon-account' %}
                      {%- liquid
                        if customer
                          echo 'customer.account_fallback' | t
                        else
                          echo 'customer.log_in' | t
                        endif
                      -%}
                    </a>
                  {%- endif -%}
                </div>
              </div>
            </div>
          </div>
        </details>
      </header-drawer>
    {%- endif -%}

      <details-modal class="header__search">
        <details>
          <summary class="header__icon header__icon--search header__icon--summary link focus-inset modal__toggle" aria-haspopup="dialog" aria-label="{{ 'general.search.search' | t }}">
            <span>
              <svg class="modal__toggle-open icon icon-search" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-search">
              </svg>
              <svg class="modal__toggle-close icon icon-close" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-close">
              </svg>
            </span>
          </summary>
          <div class="search-modal modal__content" role="dialog" aria-modal="true" aria-label="{{ 'general.search.search' | t }}">
            <div class="modal-overlay"></div>
            <div class="search-modal__content{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} search-modal__content-top{% else %} search-modal__content-bottom{% endif %}" tabindex="-1">
              {%- if settings.predictive_search_enabled -%}
                <predictive-search class="search-modal__form" data-loading-text="{{ 'accessibility.loading' | t }}">
              {%- endif -%}
                <form action="{{ routes.search_url }}" method="get" role="search" class="search search-modal__form">
                  <div class="field">
                    <input class="search__input field__input"
                      id="Search-In-Modal-1"
                      type="search"
                      name="q"
                      value=""
                      placeholder="{{ 'general.search.search' | t }}"
                      {%- if settings.predictive_search_enabled -%}
                        role="combobox"
                        aria-expanded="false"
                        aria-owns="predictive-search-results-list"
                        aria-controls="predictive-search-results-list"
                        aria-haspopup="listbox"
                        aria-autocomplete="list"
                        autocorrect="off"
                        autocomplete="off"
                        autocapitalize="off"
                        spellcheck="false"
                      {%- endif -%}
                    >
                    <label class="field__label" for="Search-In-Modal-1">{{ 'general.search.search' | t }}</label>
                    <input type="hidden" name="options[prefix]" value="last">
                    <button class="search__button field__button" aria-label="{{ 'general.search.search' | t }}">
                      <svg class="icon icon-search" aria-hidden="true" focusable="false" role="presentation">
                        <use href="#icon-search">
                      </svg>
                    </button>
                  </div>

                  {%- if settings.predictive_search_enabled -%}
                    <div class="predictive-search predictive-search--header" tabindex="-1" data-predictive-search>
                      <div class="predictive-search__loading-state">
                        <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                          <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                        </svg>
                      </div>
                    </div>

                    <span class="predictive-search-status visually-hidden" role="status" aria-hidden="true"></span>
                  {%- endif -%}
                </form>
              {%- if settings.predictive_search_enabled -%}
                </predictive-search>
              {%- endif -%}
              <button type="button" class="modal__close-button link link--text focus-inset" aria-label="{{ 'accessibility.close' | t }}">
                <svg class="icon icon-close" aria-hidden="true" focusable="false" role="presentation">
                  <use href="#icon-close">
                </svg>
              </button>
            </div>
          </div>
        </details>
      </details-modal>

    {%- if request.page_type == 'index' -%}
      <h1 class="header__heading">
    {%- endif -%}
        <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
          {% render 'svg-logo' %}
        </a>
    {%- if request.page_type == 'index' -%}
      </h1>
    {%- endif -%}

    {%- if section.settings.menu != blank -%}
      <nav class="header__inline-menu">
        <ul class="list-menu list-menu--inline" role="list">
          {%- for link in section.settings.menu.links -%}
            <li>
              {%- if link.links != blank -%}
                <details-disclosure>
                  <details id="Details-HeaderMenu-{{ forloop.index }}">
                    <summary class="header__menu-item list-menu__item link focus-inset">
                      <span {%- if link.child_active %} class="header__active-menu-item"{% endif %}>{{ link.title | escape }}</span>
                      {% render 'icon-caret' %}
                    </summary>
                    <ul id="HeaderMenu-MenuList-{{ forloop.index }}" class="header__submenu list-menu list-menu--disclosure caption-large motion-reduce" role="list" tabindex="-1">
                      {%- for childlink in link.links -%}
                        <li>
                          {%- if childlink.links == blank -%}
                            <a href="{{ childlink.url }}" class="header__menu-item list-menu__item link--text focus-inset p-sm caption-large{% if childlink.current %} list-menu__item--active{% endif %}"{% if childlink.current %} aria-current="page"{% endif %}>
                              {{ childlink.title | escape }}
                            </a>
                          {%- else -%}
                            <details id="Details-HeaderSubMenu-{{ forloop.index }}">
                              <summary class="header__menu-item link link--text list-menu__item focus-inset caption-large">
                                {{ childlink.title | escape }}
                                {% render 'icon-caret' %}
                              </summary>
                              <ul id="HeaderMenu-SubMenuList-{{ forloop.index }}" class="header__submenu list-menu motion-reduce">
                                {%- for grandchildlink in childlink.links -%}
                                  <li>
                                    <a href="{{ grandchildlink.url }}" class="header__menu-item list-menu__item p-sm link--text focus-inset caption-large{% if grandchildlink.current %} list-menu__item--active{% endif %}"{% if grandchildlink.current %} aria-current="page"{% endif %}>
                                      {{ grandchildlink.title | escape }}
                                    </a>
                                  </li>
                                {%- endfor -%}
                              </ul>
                            </details>
                          {%- endif -%}
                        </li>
                      {%- endfor -%}
                    </ul>
                  </details>
                </details-disclosure>
              {%- else -%}
                <a href="{{ link.url }}" class="header__menu-item header__menu-item list-menu__item p-sm link--text focus-inset"{% if link.current %} aria-current="page"{% endif %}>
                  <span {%- if link.current %} class="header__active-menu-item"{% endif %}>{{ link.title | escape }}</span>
                </a>
              {%- endif -%}
            </li>
          {%- endfor -%}
        </ul>
      </nav>
    {%- endif -%}

    <div class="header__icons">
      <details-modal class="header__search">
        <details>
          <summary class="header__icon header__icon--search header__icon--summary link focus-inset modal__toggle" aria-haspopup="dialog" aria-label="{{ 'general.search.search' | t }}">
            <span>
              <svg class="modal__toggle-open icon icon-search" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-search">
              </svg>
              <svg class="modal__toggle-close icon icon-close" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-close">
              </svg>
            </span>
          </summary>
          <div class="search-modal modal__content" role="dialog" aria-modal="true" aria-label="{{ 'general.search.search' | t }}">
            <div class="modal-overlay"></div>
            <div class="search-modal__content{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} search-modal__content-top{% else %} search-modal__content-bottom{% endif %}" tabindex="-1">
              {%- if settings.predictive_search_enabled -%}
                <predictive-search class="search-modal__form" data-loading-text="{{ 'accessibility.loading' | t }}">
              {%- endif -%}
                <form action="{{ routes.search_url }}" method="get" role="search" class="search search-modal__form">
                  <div class="field">
                    <input class="search__input field__input"
                      id="Search-In-Modal"
                      type="search"
                      name="q"
                      value=""
                      placeholder="{{ 'general.search.search' | t }}"
                      {%- if settings.predictive_search_enabled -%}
                        role="combobox"
                        aria-expanded="false"
                        aria-owns="predictive-search-results-list"
                        aria-controls="predictive-search-results-list"
                        aria-haspopup="listbox"
                        aria-autocomplete="list"
                        autocorrect="off"
                        autocomplete="off"
                        autocapitalize="off"
                        spellcheck="false"
                      {%- endif -%}
                    >
                    <label class="field__label" for="Search-In-Modal">{{ 'general.search.search' | t }}</label>
                    <input type="hidden" name="options[prefix]" value="last">
                    <button class="search__button field__button" aria-label="{{ 'general.search.search' | t }}">
                      <svg class="icon icon-search" aria-hidden="true" focusable="false" role="presentation">
                        <use href="#icon-search">
                      </svg>
                    </button>
                  </div>

                  {%- if settings.predictive_search_enabled -%}
                    <div class="predictive-search predictive-search--header" tabindex="-1" data-predictive-search>
                      <div class="predictive-search__loading-state">
                        <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                          <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                        </svg>
                      </div>
                    </div>

                    <span class="predictive-search-status visually-hidden" role="status" aria-hidden="true"></span>
                  {%- endif -%}
                </form>
              {%- if settings.predictive_search_enabled -%}
                </predictive-search>
              {%- endif -%}
              <button type="button" class="search-modal__close-button modal__close-button link link--text focus-inset" aria-label="{{ 'accessibility.close' | t }}">
                <svg class="icon icon-close" aria-hidden="true" focusable="false" role="presentation">
                  <use href="#icon-close">
                </svg>
              </button>
            </div>
          </div>
        </details>
      </details-modal>

      {%- if shop.customer_accounts_enabled -%}
        <a href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}" class="header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}">
          {% render 'icon-account' %}
          <span class="visually-hidden">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        {%- liquid
          if cart == empty
            render 'icon-cart-empty'
          else
            render 'icon-cart'
          endif
        -%}
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
  </header>
</{% if section.settings.enable_sticky_header %}sticky-header{% else %}div{% endif %}>

{%- render 'cart-notification', color_scheme: "cream" -%}



{% javascrip %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.getElementById('shopify-section-header');
      this.headerBounds = {};
      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        requestAnimationFrame(this.reset.bind(this));
      }


      this.currentScrollTop = scrollTop;
    }

    hide() {
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('details-disclosure');
      this.disclosures.forEach(disclosure => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascrip %}

{% endcomment %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ shop.url | append: page.url | json }}
  }
</script>


{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = shop.url | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ shop.url | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "settings": [
    {
      "id": "always_show_nav",
      "type": "checkbox",
      "label": "Don't hide navigation bar on scroll down?",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "link",
      "name": "Normal Link",
      "settings": [
        {
          "type": "header",
          "content": "Normal link in navigation",
          "info": "Navigates to new a new page when clicked on."
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        }
      ]
    },
    {
      "type": "label",
      "name": "Dropdown Label",
      "settings": [
        {
          "type": "header",
          "content": "Label in naviation",
          "info": "Displays a dropdown when clicked on. All items after this up until the next normal link or dropdown label will be included beneath this label's dropdown."
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label"
        },
        {
          "type": "color",
          "id": "color",
          "label": "Label's associated color",
          "info": "Applied to the divider when it's dropdown is displayed"
        }
      ]
    },
    {
      "type": "submenu",
      "name": "Submenu in Dropdown",
      "settings": [
        {
          "type": "header",
          "content": "Collection of links displayed in a dropdown",
          "info": "Make sure you add a dropdown label at some point before this item in order to know which dropdown this belongs in."
        },
        {
          "type": "link_list",
          "id": "menu",
          "label": "Menu",
          "info": "Displays only top-level menu items. Create this menu under 'Navigation'"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text Block in Dropdown",
      "settings": [
        {
          "type": "header",
          "content": "Text block displayed in a dropdown",
          "info": "Make sure you add a dropdown label at some point before this item in order to know which dropdown this belongs in."
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        }
      ]
    },
    {
      "type": "page",
      "name": "Featured Page in Dropdown",
      "settings": [
        {
          "type": "header",
          "content": "Featured page displayed in a dropdown",
          "info": "Make sure you add a dropdown label at some point before this item in order to know which dropdown this belongs in."
        },
        {
          "type": "page",
          "id": "page",
          "label": "Page"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "Should represent chosen page"
        }
      ]
    },
    {
      "type": "articles",
      "name": "Articles in Dropdown",
      "settings": [
        {
          "type": "header",
          "content": "Collection of articles displayed in a dropdown",
          "info": "Make sure you add a dropdown label at some point before this item in order to know which dropdown this belongs in."
        },
        {
          "type": "link_list",
          "id": "menu",
          "label": "Menu",
          "info": "Displays only top-level menu items. Create this menu under 'Navigation' and add only article items to it."
        }
      ]  
    },
    {
      "type": "cta",
      "name": "Call To Action",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        }
      ]  
    }
  ]
}
{% endschema %}
